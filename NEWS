TODOs

Limited memory FPOP version. What serialization/file format to use for
reading data (bigwig/bedGraph?) and storing the optimal cost
functions?

Regularized isotonic regression solver, square loss and penalized
(FPOP) parameterization.

To avoid root finding problems in large data sets, try storing mean
cost rather than total cost.

2016.08.02

PeakSegFPOPall C++ function which can start or end either up or down.

PeakSegFPOPLog C++ function forces starts and ends down. This is used
by the R function PeakSegFPOP.

Bugfix in min_more computation for intersections between constant cost
and degenerate linear cost.

Bugfix in decoding: we no longer call Minimize for segments other than
the last one. Now we store the previous segment mean (which was
already computed by the min-less/more operator). No more bool
equality_constraint_active, instead test prev_seg_mean == INFINITY.

2016.07.13

FPOP version of PeakSeg constrained, Poisson loss problem.

2016.07.12

For numerical stability, the PeakSegPDPA intervals are in now the log
space. That means if the data min is 0, then there will be an interval
with -Inf for its lower limit. Smaller root finding is in the
f(m)=Linear*e^m+Log*m+Constant space, and larger root finding is in
the g(x)=Linear*x+Log*log(x)+Constant space.

2016.07.06

The Lambert W root finding method was numerically unstable, for
example the roots of the cost function -628*x+log(x)-776.140660 could
not be computed correctly since exp(-776) is exactly zero using
doubles. Instead I implemented a bound-constrained Newton root finding
method which seems to be more stable.

2016.07.03

Some bugs fixed in the min env and min less computations.

2016.06.18

First working C++ solver for Segment Neighborhood problem with Poisson
Loss and PeakSeg constraint (PeakSegPDPA function).