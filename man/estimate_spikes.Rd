% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/estimate_spikes.R
\name{estimate_spikes}
\alias{estimate_spikes}
\title{Estimate spike train, underlying calcium concentration, and changepoints
based on a fluorescence trace.}
\usage{
estimate_spikes(dat, gam, lambda, constraint = FALSE,
  estimate_calcium = FALSE, EPS = 1e-10)
}
\arguments{
\item{dat}{fluorescence data}

\item{gam}{a scalar value for the AR(1) decay parameter}

\item{lambda}{tuning parameter lambda}

\item{constraint}{boolean specifying constrained or unconstrained
optimization problem (see below)}

\item{estimate_calcium}{boolean specifying whether to estimate the calcium}

\item{EPS}{double specfying the minimum calcium value}
}
\value{
Returns a list with elements:

\code{spikes} the set of estimated spikes

\code{estimated_calcium} estimated calcium concentration

\code{change_pts} the set of changepoints

\code{cost} the cost at each time point

\code{n_intervals} the number of intervals at each point
}
\description{
Estimate spike train, underlying calcium concentration, and changepoints
based on a fluorescence trace.
}
\details{
This algorithm solves the optimization problems

\strong{AR(1) model:}

minimize_{c1,...,cT} 0.5 sum_{t=1}^T ( y_t - c_t )^2 + lambda sum_{t=2}^T
1_[c_t != max(gam c_{t-1}, EPS)]

for the global optimum, where y_t is the observed fluorescence at the tth
timepoint.

\strong{Constrained AR(1) model:}

minimize_{c1,...,cT} 0.5 sum_{t=1}^T ( y_t - c_t )^2 + lambda sum_{t=2}^T
1_[c_t != max(gam c_{t-1}, EPS)]

subject to c_t >= max(gam c_{t-1}, EPS), t = 2, ..., T

We introduce the constant EPS > 0, typically on the order of 10^-10, to avoid
arbitrarily small calcium concentrations that would result in numerical
instabilities. In practice, this means that the estimated calcium
concentration decays according to the AR(1) model for values greater than EPS and
is equal to EPS thereafter.

When estimating the spikes, it is not necessary to explicitly compute the
calcium concentration. Therefore, if only the spike times are required, the
user can avoid this computation cost by setting the estimate_calcium
boolean to false. Because estimating the calcium requires additional computation time, 
we suggest estimating the calcium only if it is needed.

Given the set of estimated spikes produced from the estimate_spike, the
calcium concentration can be estimated with the estimate_calcium function
(see examples below).

For additional information see:

1. Jewell, Hocking, Fearnhead, and Witten (2018) <arXiv:1802.07380> and

2. Jewell and Witten (2017) <arXiv:1703.08644>
}
\examples{

sim <- simulate_ar1(n = 500, gam = 0.95, poisMean = 0.009, sd = 0.05, seed = 1)
plot(sim)

## Fits for a single tuning parameter

# AR(1) model
fit <- estimate_spikes(dat = sim$fl, gam = 0.95, lambda = 1)
print(fit)

# compute fitted values from prev. fit
fit <- estimate_calcium(fit)
plot(fit)

# or
fit <- estimate_spikes(dat = sim$fl, gam = 0.95, lambda = 1, estimate_calcium = T)
plot(fit)

# Constrained AR(1) model
fit <- estimate_spikes(dat = sim$fl, gam = 0.95, lambda = 1, constraint = T, estimate_calcium = T)
print(fit)
plot(fit)

}
\seealso{
\strong{Estimate spikes:}
\code{\link{estimate_spikes}}
\code{\link{estimate_calcium}}

\strong{Simulate:}
\code{\link{simulate_ar1}}
}
